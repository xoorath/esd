name: Build and Package

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.png'
      - '**.svg'
      - '.gitignore'
      - '**.html'
      - '**.css'
      - '**.js'
  pull_request:
    branches: [ main ]

jobs:
  build-and-package:
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
          os: Windows-2019,
          build_arch: Win32,
          build_type: MinSizeRel,
          build_generator: Visual Studio 16 2019,
          clearname: win32
        }
        - {
          os: Windows-2019,
          build_arch: x64,
          build_type: MinSizeRel,
          build_generator: Visual Studio 16 2019,
          clearname: win64
        }
        - {
          os: ubuntu-20.04,
          build_arch: x64,
          build_type: MinSizeRel,
          build_generator: Ninja,
          clearname: linux
        }
        - {
          os: Macos-10.15,
          build_arch: x64,
          build_type: MinSizeRel,
          build_generator: Ninja,
          clearname: macos
        }
    runs-on: ${{ matrix.config.os }}
    steps:

      - uses: actions/checkout@v2

      - name: Install Ninja
        if: "contains(matrix.config.os, 'Macos')"
        run: |
          brew update
          brew install ninja
          brew upgrade

      - name: Install Ninja
        if: "contains(matrix.config.os, 'Ubuntu')"
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build
          sudo apt-get upgrade build-essential
          sudo apt-get upgrade gcc

      - name: Generate ${{ matrix.config.clearname }}
        if: "contains(matrix.config.build_generator, 'Visual Studio')"
        run: |
          cmake -S . -B Build -A ${{ matrix.config.build_arch }} -G "${{ matrix.config.build_generator}}" -DGITHUB_CI=ON -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="../${{ matrix.config.clearname }}"

      - name: Generate ${{ matrix.config.clearname }}
        if: "!contains(matrix.config.build_generator, 'Visual Studio')"
        run: |
          cmake -S . -B Build -G "${{ matrix.config.build_generator}}" -DGITHUB_CI=ON -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="../${{ matrix.config.clearname }}"

      - name: Build ${{ matrix.config.clearname }}
        run: |
          cmake --build Build --config ${{ matrix.config.build_type }}

      - uses: actions/upload-artifact@v2
        with:
          name: esd ${{ matrix.config.clearname }}
          path: |
            **/esd
            **/esd.exe
          if-no-files-found: error
          retention-days: 7
          
      - uses: actions/upload-artifact@v2
        with:
          name: esd
          path: |
            **/esd
            **/esd.exe
          if-no-files-found: error
          retention-days: 7
